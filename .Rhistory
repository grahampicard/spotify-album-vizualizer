Tempo = round(Tempo,0),
Valence = round(Valence, 2),
Instrumentalness = round(Instrumentalness, 2),
Acousticness = round(Acousticness, 2),
Speechineses = round(Speechineses, 2),
Duration = track_length/60000,
test = format(.POSIXct( track_length/1000,tz="GMT"), "%M:%S"),
track = as.character(track),
end_time = cumsum(Duration),
start_time = end_time - Duration) %>%
arrange(track_number)
return(gantt)
}
artist <- get_artist("Radiohead")
albums <- get_albums(artist$artist_id)
#### Graph Noodling ####
library(dplyr)
library(tidyr)
library(googleVis)
library(ggplot2)
setwd("~/../Dropbox/github/spotify-artist-app")
source("global.R")
artist <- get_artist("Radiohead")
albums <- get_albums(artist$artist_id)
albums
tracks <- get_tracks("1DBkJIEoeHrTX4WCBQGcCi")
info   <- add_track_info(tracks)
info
artist <- get_artist("Radiohead")
albums <- get_albums(artist$artist_id)
tracks <- get_tracks("1DBkJIEoeHrTX4WCBQGcCi")
info   <- add_track_info(tracks)
gantt  <- gantt_df(info)
gantt
#extract artist from text input
rd_df <- gantt
graph_df <- function(track_info_df) {
graph <-  track_info_df %>%
mutate(Danceability = round(Danceability, 2),
Energy = round(Energy, 2),
Loudness = round(Loudness, 2),
Tempo = round(Tempo,0),
Valence = round(Valence, 2),
Instrumentalness = round(Instrumentalness, 2),
Acousticness = round(Acousticness, 2),
Speechineses = round(Speechineses, 2),
Duration = track_length/60000,
test = format(.POSIXct( track_length/1000,tz="GMT"), "%M:%S"),
track = as.character(track),
end_time = cumsum(Duration),
start_time = end_time - Duration) %>%
arrange(track_number)
return(graph)
}
graph  <- graph_df(info)
rd_df <- graph
rd_df
album_df <- graph
runApp()
runApp()
runApp()
runApp()
runApp()
rd_df
album_df <- rd_df
df <- album_df %>%
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
ggplot(df, aes(track, position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete(limits = (adji$track)) +
ylab(NULL) +
xlab("Valence")
album_df <- graph
album_d
album_df
rgraph <- graph_df(info)
album_df <- rgraph
album_df
df <- album_df %>%
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
ggplot(album_df, aes(track, position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete(limits = (adji$track)) +
ylab(NULL) +
xlab("Valence")
df <- album_df %>%
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
df <- album_df %>%
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
ggplot(df, aes(track, position, colour = Loudness)) +
geom_line(size = 5)
df <- album_df %>%
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
ggplot(df, aes(track, position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete(limits = (adji$track)) +
ylab(NULL) +
xlab("Valence")
df <- album_df %>%
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
ggplot(df, aes(track, position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete(limits = (adji$track))
df <- album_df %>%
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
ggplot(df, aes(track, position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip()
runApp()
rgraph
saveRDS(rgraph, "kol-graph-df")
rgraph <- readRDS("kol-graph-df")
saveRDS(info, "kol-info")
runApp('C:/Users/gpicard/Dropbox/github/shiny_projects/shinydashboard-map')
runApp()
runApp()
df <- album_df %>%
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
ggplot(df, aes(track, position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete(limits = (adji$track)) +
ylab(NULL) +
xlab("Valence") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "#b3b3b3"),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank()
)
df <- album_df %>%
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
ggplot(df, aes(track, position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete(limits = (df$track)) +
ylab(NULL) +
xlab("Valence") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "#b3b3b3"),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank()
)
runApp()
ggplot(df, aes(track, position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete(limits = (df$track)) +
ylab(NULL) +
xlab("Valence") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.ticks.x = element_blank(),
#          panel.grid.major.y = element_line(color = "#b3b3b3"),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank()
)
ggplot(df, aes(track, position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete(limits = (df$track)) +
ylab(NULL) +
xlab("Valence") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.ticks.x = element_blank(),
#          panel.grid.major.y = element_line(color = "#b3b3b3"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank()
)
runApp()
ggplot(df, aes(track, position, colour = Loudness)) +
geom_line(size = 5)
ggplot(df, aes(track, position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip()
ggplot(df, aes(track, position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete() +
ylab(NULL)
ggplot(df, aes(factor(track, order), position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete()
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip()
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
order <- unique(df$track)
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness))
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
order <- unique(df$track)
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 5)
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
order <- unique(df$track)
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip()
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
order <- unique(df$track)
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete() +
ylab(NULL) +
xlab("Valence") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.ticks.x = element_blank(),
#          panel.grid.major.y = element_line(color = "#b3b3b3"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank()
)
df <- album_df %>%
select(track, track_number, Loudness, end_time, start_time) %>%
gather(time, position, 4:5) %>%
arrange(track_number)
order <- unique(df$track)
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete(limits = (df$track)) +
ylab(NULL) +
xlab("Valence") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "#b3b3b3"),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank()
)
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete() +
ylab(NULL) +
xlab("Valence")
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete() +
ylab(NULL) +
xlab("Valence") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "#b3b3b3"),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank()
)
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete() +
ylab(NULL) +
xlab("Valence") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "#fcfcfc"),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank()
)
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete() +
ylab(NULL) +
xlab("Valence") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "#e6e6e6"),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank()
)
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 8) +
coord_flip() +
scale_x_discrete() +
ylab(NULL) +
xlab("Valence") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "#e6e6e6"),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank()
)
runApp()
runApp()
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete() +
ylab(NULL) +
xlab("Valence") +
scale_color_brewer() +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.ticks.x = element_blank(),
#          panel.grid.major.y = element_line(color = "#b3b3b3"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank()
)
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete() +
ylab(NULL) +
xlab("Valence") +
scale_color_continuous() +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.ticks.x = element_blank(),
#          panel.grid.major.y = element_line(color = "#b3b3b3"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank()
)
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 5) +
coord_flip() +
scale_x_discrete() +
ylab(NULL) +
xlab("Valence") +
scale_color_continuous(low = "#003366", high = "#cce4ff") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.ticks.x = element_blank(),
#          panel.grid.major.y = element_line(color = "#b3b3b3"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank()
)
runApp()
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 8) +
coord_flip() +
scale_x_discrete() +
scale_color_continuous(low = "#003366", high = "#cce4ff") +
ylab(NULL) +
xlab("Valence") +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=12),
axis.text.x = element_text(size=12),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "#e6e6e6"),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank()
)
runApp()
runApp()
runApp()
runApp()
ggplot(df, aes(factor(track, levels = order), position, colour = Loudness)) +
geom_line(size = 8) +
coord_flip() +
scale_x_discrete() +
scale_color_continuous(low = "#003366", high = "#cce4ff") +
ylab(NULL) +
theme(panel.background = element_blank(),
plot.background = element_blank(),
legend.title = element_blank(),
# legend.text = element_text(color="#555555", size = 12),
legend.background = element_blank(),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.title.y = element_text(size=16),
axis.text.x = element_text(size=16),
axis.ticks.x = element_blank(),
panel.grid.major.y = element_line(color = "#e6e6e6"),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank()
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(rgraph)
runApp()
runApp()
runApp()
